/* 7. CLIENT-SPECIFIC STYLES
========================================*/

/*

	# .ExternalClass Class Override

	When an email is pulled into Outlook.com / Hotmail, any style rules present in the email are appended with `.ExternalClass`. Normalizing a few of these can help create a baseline for you to work from.

*/

.ExternalClass{
	width: 100%;
}

.ExternalClass,
.ExternalClass p,
.ExternalClass span,
.ExternalClass font,
.ExternalClass td,
.ExternalClass div {
	line-height: 100%;
}

/*

	# <hX> Color Override

	Outlook.com / Hotmail sets its own (gross green) color on heading elements lower in level than an <h1> element. This means you need to account for headings <h2> through <h6>. Fortunately, it's as easy as applying a `!important` declaration to the heading's `color` property.

*/

h2 {
	color: #0066cc !important;
}

h3 {}

h4 {}

h5 {}

h6 {}

/*

	# Outlook 2007 / 2010 / 2013: "Read in Browser" Link

	It's possible, in Outlook, to trigger the appearance of a fairly prominent "View this email in your browser" bar within the application, allowing you to drive people to view your email in a browser which will render it in a much better way than Outlook ever can.

*/

#outlook a {
	padding: 0;
}

/*

	# Outlook 2007 / 2010 / 2013: <table> Element Spacing

	Outlook can sometimes add a bit of spacing on the left and right side of a <table> element that can cause some layout-related headaches. By using the vendor-specific mso-table-lspace and mso-table-rspace CSS properties, you can be rid of those spaces and continue on to tackle the million other problems caused by Outlook.

*/

table {
	mso-table-lspace: 0pt;
	mso-table-rspace: 0pt;
}

/*

	# Outlook 2007 / 2010 / 2013: Image Resizing

	Using width or height tags to resize images in your markup can create a problem in Internet Explorer browsers. If your reader is viewing an email in-browser, and that email happens to have fluid images in it, theyâ€™ll look pretty ugly as they resize. Using -ms-interpolation-mode:bicubic; ensures that your images look a little better.

*/

img {
	-ms-interpolation-mode: bicubic;
}

/*

	macOS / iOS: WebKit Text Size Adjustment

	WebKit looks for any text that happens to be sized smaller than 13px and increases it to that number, which can sometimes cause design issues in places intended for small text. Setting -webkit-text-size-adjust to none will prevent iOS platforms from resizing the text, but this method also prevents OSX applications like Safari from bumping the text size up - something that can cause issues for people who need the text size to be large. Setting -webkit-text-size-adjust to 100% seems to be the best of both worlds.

*/

/*

	# Windows Mobile: Windows Mobile Text Size Adjustment

	Much like in OSX and iOS, small text is also resized on Windows Mobile. The same vendor-prefix-based CSS property is used here, just with the `ms` vendor prefix instead of the `webkit` one.

*/

body {
	-webkit-text-size-adjust: 100%;
	-ms-text-size-adjust: 100%;
}

/*

	<!-- Outlook Conditional CSS -->

	<!--[if gte mso 9]>
	
		<style stype="text/css">

			# Your Outlook-specific CSS goes here.
			
		</style>
		
	<![endif]-->

*/